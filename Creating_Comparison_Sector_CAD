
package macro;

import java.util.*;
import star.common.*;
import star.base.neo.*;
import star.vis.*;
import star.cadmodeler.*;

public class Comparison_1 extends StarMacro {

    public void execute() {
        Simulation simulation = getActiveSimulation();
        Units units = simulation.getUnitsManager().getPreferredUnits(Dimensions.Builder().length(1).build());
        Scene scene = simulation.getSceneManager().getScene("Geometry Scene 1");
        CadModel cadModel = ((CadModel) simulation.get(SolidModelManager.class).getObject("3D-CAD Model 1"));

        for (int i = 1; i <= 8; i++) {
            String cadName = "P" + i;
            String cadPath = "/nfs/nnwork011/106300/03_Simulations/Sector/V2410/Designs/" + cadName + ".x_b";

            Scene cadScene = simulation.getSceneManager().createScene("3D-CAD View");
            simulation.get(SolidModelManager.class).editCadModel(cadModel, cadScene);
            cadScene.openInteractive();
            cadScene.setAdvancedRenderingEnabled(false);
            cadScene.resetCamera();

            cadModel.importCadFile(resolvePath(cadPath), true, true, true, true, false,
                TessellationDensityMode.COARSE, true, false, false, true, false, false, false,
                false, true, false, true,
                NeoProperty.fromString("{'NX': 1, 'STEP': 1, 'SE': 1, 'CGR': 1, 'SW': 1, 'RHINO': 1, 'IFC': 1, 'ACIS': 1, 'JT': 1, 'IGES': 1, 'CATIAV5': 1, 'CATIAV4': 1, '3DXML': 1, 'CREO': 1, 'INV': 1}"),
                false, null, 0.0);

            cadScene.resetCamera();

            Body body = (Body) cadModel.getBody("Cylinder Sector: Sector Cylinder");
            body.setPresentationName(cadName);

            cadModel.update();
            simulation.get(SolidModelManager.class).endEditCadModel(cadModel);
            simulation.getSceneManager().remove(cadScene);

            cadModel.createParts(new ArrayList<>(Arrays.asList(body)), new ArrayList<>(Collections.emptyList()),
                true, false, 1, false, false, 3, "SharpEdges", 30.0, 2, true, 1.0E-5, false);

            SolidModelPart part = (SolidModelPart) simulation.get(SimulationPartManager.class).getPart(cadName);
            PartSurface surface = (PartSurface) part.getPartSurfaceManager().getPartSurface("Head");

            PlaneSection section = (PlaneSection) simulation.getPartManager().createImplicitPart(
                new ArrayList<>(Collections.<NamedObject>emptyList()),
                new DoubleVector(new double[] {0.0, 0.0, 1.0}),
                new DoubleVector(new double[] {0.0, 0.0, 0.0}),
                0, 1, new DoubleVector(new double[] {0.0}), null);

            section.setCoordinateSystem(simulation.getCoordinateSystemManager().getLabCoordinateSystem());
            section.getInputParts().setObjects(part.getPartSurfaceManager().getPartSurfaces());
            section.setPresentationName(cadName);

            PartDisplayer displayer = scene.getDisplayerManager().createPartDisplayer("Section Surface", -1, 1);
            displayer.setPresentationName(cadName);
            displayer.setColorMode(PartColorMode.CONSTANT);
            displayer.setDisplayerColor(new DoubleVector(new double[] {0.0, 1.0, 0.0}));
            displayer.getVisibleParts().addParts(section);
        }
    }
}
